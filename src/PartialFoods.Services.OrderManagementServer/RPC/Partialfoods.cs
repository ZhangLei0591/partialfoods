// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partialfoods.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PartialFoods.Services {

  /// <summary>Holder for reflection information generated from partialfoods.proto</summary>
  public static partial class PartialfoodsReflection {

    #region Descriptor
    /// <summary>File descriptor for partialfoods.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PartialfoodsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJwYXJ0aWFsZm9vZHMucHJvdG8SFVBhcnRpYWxGb29kcy5TZXJ2aWNlcyKx",
            "AQoMT3JkZXJSZXF1ZXN0EhEKCUNyZWF0ZWRPbhgBIAEoBBIOCgZVc2VySUQY",
            "AiABKAkSDwoHVGF4UmF0ZRgDIAEoDRI5CgxTaGlwcGluZ0luZm8YBCABKAsy",
            "Iy5QYXJ0aWFsRm9vZHMuU2VydmljZXMuU2hpcHBpbmdJbmZvEjIKCUxpbmVJ",
            "dGVtcxgFIAMoCzIfLlBhcnRpYWxGb29kcy5TZXJ2aWNlcy5MaW5lSXRlbSJp",
            "CgxTaGlwcGluZ0luZm8SEQoJQWRkcmVzc2VlGAEgASgJEhQKDEFkZHJlc3NM",
            "aW5lcxgCIAMoCRIMCgRDaXR5GAMgASgJEg8KB1ppcENvZGUYBCABKAkSEQoJ",
            "U3RhdGVDb2RlGAUgASgJIjwKCExpbmVJdGVtEgsKA1NLVRgBIAEoCRIRCglV",
            "bml0UHJpY2UYAiABKA0SEAoIUXVhbnRpdHkYAyABKA0iMgoNT3JkZXJSZXNw",
            "b25zZRIPCgdPcmRlcklEGAEgASgJEhAKCEFjY2VwdGVkGAIgASgIIjUKEkNh",
            "bmNlbE9yZGVyUmVxdWVzdBIPCgdPcmRlcklEGAEgASgJEg4KBlVzZXJJRBgC",
            "IAEoCSJSChNDYW5jZWxPcmRlclJlc3BvbnNlEg8KB09yZGVySUQYASABKAkS",
            "EAoIQ2FuY2VsZWQYAiABKAgSGAoQQ29uZmlybWF0aW9uQ29kZRgDIAEoCTLO",
            "AQoMT3JkZXJDb21tYW5kElgKC1N1Ym1pdE9yZGVyEiMuUGFydGlhbEZvb2Rz",
            "LlNlcnZpY2VzLk9yZGVyUmVxdWVzdBokLlBhcnRpYWxGb29kcy5TZXJ2aWNl",
            "cy5PcmRlclJlc3BvbnNlEmQKC0NhbmNlbE9yZGVyEikuUGFydGlhbEZvb2Rz",
            "LlNlcnZpY2VzLkNhbmNlbE9yZGVyUmVxdWVzdBoqLlBhcnRpYWxGb29kcy5T",
            "ZXJ2aWNlcy5DYW5jZWxPcmRlclJlc3BvbnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.OrderRequest), global::PartialFoods.Services.OrderRequest.Parser, new[]{ "CreatedOn", "UserID", "TaxRate", "ShippingInfo", "LineItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.ShippingInfo), global::PartialFoods.Services.ShippingInfo.Parser, new[]{ "Addressee", "AddressLines", "City", "ZipCode", "StateCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.LineItem), global::PartialFoods.Services.LineItem.Parser, new[]{ "SKU", "UnitPrice", "Quantity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.OrderResponse), global::PartialFoods.Services.OrderResponse.Parser, new[]{ "OrderID", "Accepted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.CancelOrderRequest), global::PartialFoods.Services.CancelOrderRequest.Parser, new[]{ "OrderID", "UserID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.CancelOrderResponse), global::PartialFoods.Services.CancelOrderResponse.Parser, new[]{ "OrderID", "Canceled", "ConfirmationCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OrderRequest : pb::IMessage<OrderRequest> {
    private static readonly pb::MessageParser<OrderRequest> _parser = new pb::MessageParser<OrderRequest>(() => new OrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRequest(OrderRequest other) : this() {
      createdOn_ = other.createdOn_;
      userID_ = other.userID_;
      taxRate_ = other.taxRate_;
      ShippingInfo = other.shippingInfo_ != null ? other.ShippingInfo.Clone() : null;
      lineItems_ = other.lineItems_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRequest Clone() {
      return new OrderRequest(this);
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 1;
    private ulong createdOn_;
    /// <summary>
    /// UTC milliseconds of time terminal created transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = value;
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 2;
    private string userID_ = "";
    /// <summary>
    /// User ID of the order owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaxRate" field.</summary>
    public const int TaxRateFieldNumber = 3;
    private uint taxRate_;
    /// <summary>
    /// Percentage rate of tax, whole numbers because reasons
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TaxRate {
      get { return taxRate_; }
      set {
        taxRate_ = value;
      }
    }

    /// <summary>Field number for the "ShippingInfo" field.</summary>
    public const int ShippingInfoFieldNumber = 4;
    private global::PartialFoods.Services.ShippingInfo shippingInfo_;
    /// <summary>
    /// Information on where order is to be shipped
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PartialFoods.Services.ShippingInfo ShippingInfo {
      get { return shippingInfo_; }
      set {
        shippingInfo_ = value;
      }
    }

    /// <summary>Field number for the "LineItems" field.</summary>
    public const int LineItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::PartialFoods.Services.LineItem> _repeated_lineItems_codec
        = pb::FieldCodec.ForMessage(42, global::PartialFoods.Services.LineItem.Parser);
    private readonly pbc::RepeatedField<global::PartialFoods.Services.LineItem> lineItems_ = new pbc::RepeatedField<global::PartialFoods.Services.LineItem>();
    /// <summary>
    /// Individual line items on a transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PartialFoods.Services.LineItem> LineItems {
      get { return lineItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreatedOn != other.CreatedOn) return false;
      if (UserID != other.UserID) return false;
      if (TaxRate != other.TaxRate) return false;
      if (!object.Equals(ShippingInfo, other.ShippingInfo)) return false;
      if(!lineItems_.Equals(other.lineItems_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreatedOn != 0UL) hash ^= CreatedOn.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (TaxRate != 0) hash ^= TaxRate.GetHashCode();
      if (shippingInfo_ != null) hash ^= ShippingInfo.GetHashCode();
      hash ^= lineItems_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreatedOn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(CreatedOn);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserID);
      }
      if (TaxRate != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TaxRate);
      }
      if (shippingInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ShippingInfo);
      }
      lineItems_.WriteTo(output, _repeated_lineItems_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreatedOn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedOn);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (TaxRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaxRate);
      }
      if (shippingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShippingInfo);
      }
      size += lineItems_.CalculateSize(_repeated_lineItems_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.CreatedOn != 0UL) {
        CreatedOn = other.CreatedOn;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.TaxRate != 0) {
        TaxRate = other.TaxRate;
      }
      if (other.shippingInfo_ != null) {
        if (shippingInfo_ == null) {
          shippingInfo_ = new global::PartialFoods.Services.ShippingInfo();
        }
        ShippingInfo.MergeFrom(other.ShippingInfo);
      }
      lineItems_.Add(other.lineItems_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CreatedOn = input.ReadUInt64();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
          case 24: {
            TaxRate = input.ReadUInt32();
            break;
          }
          case 34: {
            if (shippingInfo_ == null) {
              shippingInfo_ = new global::PartialFoods.Services.ShippingInfo();
            }
            input.ReadMessage(shippingInfo_);
            break;
          }
          case 42: {
            lineItems_.AddEntriesFrom(input, _repeated_lineItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShippingInfo : pb::IMessage<ShippingInfo> {
    private static readonly pb::MessageParser<ShippingInfo> _parser = new pb::MessageParser<ShippingInfo>(() => new ShippingInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShippingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShippingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShippingInfo(ShippingInfo other) : this() {
      addressee_ = other.addressee_;
      addressLines_ = other.addressLines_.Clone();
      city_ = other.city_;
      zipCode_ = other.zipCode_;
      stateCode_ = other.stateCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShippingInfo Clone() {
      return new ShippingInfo(this);
    }

    /// <summary>Field number for the "Addressee" field.</summary>
    public const int AddresseeFieldNumber = 1;
    private string addressee_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addressee {
      get { return addressee_; }
      set {
        addressee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressLines" field.</summary>
    public const int AddressLinesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_addressLines_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> addressLines_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AddressLines {
      get { return addressLines_; }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 3;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZipCode" field.</summary>
    public const int ZipCodeFieldNumber = 4;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StateCode" field.</summary>
    public const int StateCodeFieldNumber = 5;
    private string stateCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateCode {
      get { return stateCode_; }
      set {
        stateCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShippingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShippingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Addressee != other.Addressee) return false;
      if(!addressLines_.Equals(other.addressLines_)) return false;
      if (City != other.City) return false;
      if (ZipCode != other.ZipCode) return false;
      if (StateCode != other.StateCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Addressee.Length != 0) hash ^= Addressee.GetHashCode();
      hash ^= addressLines_.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (StateCode.Length != 0) hash ^= StateCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Addressee.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Addressee);
      }
      addressLines_.WriteTo(output, _repeated_addressLines_codec);
      if (City.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(City);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ZipCode);
      }
      if (StateCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StateCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Addressee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addressee);
      }
      size += addressLines_.CalculateSize(_repeated_addressLines_codec);
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (StateCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShippingInfo other) {
      if (other == null) {
        return;
      }
      if (other.Addressee.Length != 0) {
        Addressee = other.Addressee;
      }
      addressLines_.Add(other.addressLines_);
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      if (other.StateCode.Length != 0) {
        StateCode = other.StateCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Addressee = input.ReadString();
            break;
          }
          case 18: {
            addressLines_.AddEntriesFrom(input, _repeated_addressLines_codec);
            break;
          }
          case 26: {
            City = input.ReadString();
            break;
          }
          case 34: {
            ZipCode = input.ReadString();
            break;
          }
          case 42: {
            StateCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LineItem : pb::IMessage<LineItem> {
    private static readonly pb::MessageParser<LineItem> _parser = new pb::MessageParser<LineItem>(() => new LineItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LineItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem(LineItem other) : this() {
      sKU_ = other.sKU_;
      unitPrice_ = other.unitPrice_;
      quantity_ = other.quantity_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem Clone() {
      return new LineItem(this);
    }

    /// <summary>Field number for the "SKU" field.</summary>
    public const int SKUFieldNumber = 1;
    private string sKU_ = "";
    /// <summary>
    /// Stock Keeping Unit of inventory item being purchased
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SKU {
      get { return sKU_; }
      set {
        sKU_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitPrice" field.</summary>
    public const int UnitPriceFieldNumber = 2;
    private uint unitPrice_;
    /// <summary>
    /// Price for a single item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnitPrice {
      get { return unitPrice_; }
      set {
        unitPrice_ = value;
      }
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private uint quantity_;
    /// <summary>
    /// Quantity of items purchased
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LineItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LineItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SKU != other.SKU) return false;
      if (UnitPrice != other.UnitPrice) return false;
      if (Quantity != other.Quantity) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SKU.Length != 0) hash ^= SKU.GetHashCode();
      if (UnitPrice != 0) hash ^= UnitPrice.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SKU.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SKU);
      }
      if (UnitPrice != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnitPrice);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Quantity);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SKU.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SKU);
      }
      if (UnitPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitPrice);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LineItem other) {
      if (other == null) {
        return;
      }
      if (other.SKU.Length != 0) {
        SKU = other.SKU;
      }
      if (other.UnitPrice != 0) {
        UnitPrice = other.UnitPrice;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SKU = input.ReadString();
            break;
          }
          case 16: {
            UnitPrice = input.ReadUInt32();
            break;
          }
          case 24: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderResponse : pb::IMessage<OrderResponse> {
    private static readonly pb::MessageParser<OrderResponse> _parser = new pb::MessageParser<OrderResponse>(() => new OrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderResponse(OrderResponse other) : this() {
      orderID_ = other.orderID_;
      accepted_ = other.accepted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderResponse Clone() {
      return new OrderResponse(this);
    }

    /// <summary>Field number for the "OrderID" field.</summary>
    public const int OrderIDFieldNumber = 1;
    private string orderID_ = "";
    /// <summary>
    /// UUID of the order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderID {
      get { return orderID_; }
      set {
        orderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Accepted" field.</summary>
    public const int AcceptedFieldNumber = 2;
    private bool accepted_;
    /// <summary>
    /// Indicates whether the transaction was accepted    
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accepted {
      get { return accepted_; }
      set {
        accepted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderID != other.OrderID) return false;
      if (Accepted != other.Accepted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderID.Length != 0) hash ^= OrderID.GetHashCode();
      if (Accepted != false) hash ^= Accepted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderID);
      }
      if (Accepted != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accepted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderID);
      }
      if (Accepted != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.OrderID.Length != 0) {
        OrderID = other.OrderID;
      }
      if (other.Accepted != false) {
        Accepted = other.Accepted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderID = input.ReadString();
            break;
          }
          case 16: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelOrderRequest : pb::IMessage<CancelOrderRequest> {
    private static readonly pb::MessageParser<CancelOrderRequest> _parser = new pb::MessageParser<CancelOrderRequest>(() => new CancelOrderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderRequest(CancelOrderRequest other) : this() {
      orderID_ = other.orderID_;
      userID_ = other.userID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderRequest Clone() {
      return new CancelOrderRequest(this);
    }

    /// <summary>Field number for the "OrderID" field.</summary>
    public const int OrderIDFieldNumber = 1;
    private string orderID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderID {
      get { return orderID_; }
      set {
        orderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 2;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderID != other.OrderID) return false;
      if (UserID != other.UserID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderID.Length != 0) hash ^= OrderID.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderID);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderID);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderID.Length != 0) {
        OrderID = other.OrderID;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderID = input.ReadString();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelOrderResponse : pb::IMessage<CancelOrderResponse> {
    private static readonly pb::MessageParser<CancelOrderResponse> _parser = new pb::MessageParser<CancelOrderResponse>(() => new CancelOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.PartialfoodsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderResponse(CancelOrderResponse other) : this() {
      orderID_ = other.orderID_;
      canceled_ = other.canceled_;
      confirmationCode_ = other.confirmationCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOrderResponse Clone() {
      return new CancelOrderResponse(this);
    }

    /// <summary>Field number for the "OrderID" field.</summary>
    public const int OrderIDFieldNumber = 1;
    private string orderID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderID {
      get { return orderID_; }
      set {
        orderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Canceled" field.</summary>
    public const int CanceledFieldNumber = 2;
    private bool canceled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Canceled {
      get { return canceled_; }
      set {
        canceled_ = value;
      }
    }

    /// <summary>Field number for the "ConfirmationCode" field.</summary>
    public const int ConfirmationCodeFieldNumber = 3;
    private string confirmationCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmationCode {
      get { return confirmationCode_; }
      set {
        confirmationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderID != other.OrderID) return false;
      if (Canceled != other.Canceled) return false;
      if (ConfirmationCode != other.ConfirmationCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderID.Length != 0) hash ^= OrderID.GetHashCode();
      if (Canceled != false) hash ^= Canceled.GetHashCode();
      if (ConfirmationCode.Length != 0) hash ^= ConfirmationCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderID);
      }
      if (Canceled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Canceled);
      }
      if (ConfirmationCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConfirmationCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderID);
      }
      if (Canceled != false) {
        size += 1 + 1;
      }
      if (ConfirmationCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmationCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.OrderID.Length != 0) {
        OrderID = other.OrderID;
      }
      if (other.Canceled != false) {
        Canceled = other.Canceled;
      }
      if (other.ConfirmationCode.Length != 0) {
        ConfirmationCode = other.ConfirmationCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderID = input.ReadString();
            break;
          }
          case 16: {
            Canceled = input.ReadBool();
            break;
          }
          case 26: {
            ConfirmationCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
