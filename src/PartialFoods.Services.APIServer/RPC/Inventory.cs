// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PartialFoods.Services {

  /// <summary>Holder for reflection information generated from inventory.proto</summary>
  public static partial class InventoryReflection {

    #region Descriptor
    /// <summary>File descriptor for inventory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9pbnZlbnRvcnkucHJvdG8SFVBhcnRpYWxGb29kcy5TZXJ2aWNlcyIhChJH",
            "ZXRRdWFudGl0eVJlcXVlc3QSCwoDU0tVGAEgASgJIicKE0dldFF1YW50aXR5",
            "UmVzcG9uc2USEAoIUXVhbnRpdHkYASABKA0yhAEKE0ludmVudG9yeU1hbmFn",
            "ZW1lbnQSbQoUR2V0RWZmZWN0aXZlUXVhbnRpdHkSKS5QYXJ0aWFsRm9vZHMu",
            "U2VydmljZXMuR2V0UXVhbnRpdHlSZXF1ZXN0GiouUGFydGlhbEZvb2RzLlNl",
            "cnZpY2VzLkdldFF1YW50aXR5UmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.GetQuantityRequest), global::PartialFoods.Services.GetQuantityRequest.Parser, new[]{ "SKU" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PartialFoods.Services.GetQuantityResponse), global::PartialFoods.Services.GetQuantityResponse.Parser, new[]{ "Quantity" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetQuantityRequest : pb::IMessage<GetQuantityRequest> {
    private static readonly pb::MessageParser<GetQuantityRequest> _parser = new pb::MessageParser<GetQuantityRequest>(() => new GetQuantityRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQuantityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.InventoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityRequest(GetQuantityRequest other) : this() {
      sKU_ = other.sKU_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityRequest Clone() {
      return new GetQuantityRequest(this);
    }

    /// <summary>Field number for the "SKU" field.</summary>
    public const int SKUFieldNumber = 1;
    private string sKU_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SKU {
      get { return sKU_; }
      set {
        sKU_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQuantityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQuantityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SKU != other.SKU) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SKU.Length != 0) hash ^= SKU.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SKU.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SKU);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SKU.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SKU);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQuantityRequest other) {
      if (other == null) {
        return;
      }
      if (other.SKU.Length != 0) {
        SKU = other.SKU;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SKU = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQuantityResponse : pb::IMessage<GetQuantityResponse> {
    private static readonly pb::MessageParser<GetQuantityResponse> _parser = new pb::MessageParser<GetQuantityResponse>(() => new GetQuantityResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQuantityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PartialFoods.Services.InventoryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityResponse(GetQuantityResponse other) : this() {
      quantity_ = other.quantity_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuantityResponse Clone() {
      return new GetQuantityResponse(this);
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQuantityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQuantityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quantity != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Quantity);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQuantityResponse other) {
      if (other == null) {
        return;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
